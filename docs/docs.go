// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "post": {
                "description": "If cookie with access token is not provided, creates a new token with new userID.",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "default"
                ],
                "summary": "Creates short url",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cookie with access token",
                        "name": "Cookie",
                        "in": "header"
                    },
                    {
                        "description": "URL to shorten",
                        "name": "URL",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Short url",
                        "schema": {
                            "type": "body"
                        },
                        "headers": {
                            "Set-cookie": {
                                "type": "string",
                                "description": "Access token"
                            }
                        }
                    },
                    "400": {
                        "description": "Wrong URL schema",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "URL already exists",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Not a URL",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/:id": {
            "get": {
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "default"
                ],
                "summary": "Redirects to original URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cookie with access token",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Short URL ID",
                        "name": "ID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "307": {
                        "description": "Temporary Redirect",
                        "headers": {
                            "Location": {
                                "type": "string",
                                "description": "Original URL"
                            }
                        }
                    },
                    "400": {
                        "description": "ID is not present",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "URL not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "410": {
                        "description": "URL deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/internal/stats": {
            "get": {
                "description": "Access only allowed from trusted_subnet.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "json"
                ],
                "summary": "Provides service stats",
                "responses": {
                    "200": {
                        "description": "Stats",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.Envelope"
                        }
                    }
                }
            }
        },
        "/api/shorten": {
            "post": {
                "description": "If cookie with access token is not provided, creates a new token with new userID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "json"
                ],
                "summary": "Creates short URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cookie with access token",
                        "name": "Cookie",
                        "in": "header"
                    },
                    {
                        "description": "URL to shorten",
                        "name": "URL",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Request"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Short url",
                        "schema": {
                            "type": "body"
                        },
                        "headers": {
                            "Set-cookie": {
                                "type": "string",
                                "description": "Access token"
                            }
                        }
                    },
                    "400": {
                        "description": "Wrong URL schema",
                        "schema": {
                            "$ref": "#/definitions/dto.Envelope"
                        }
                    },
                    "409": {
                        "description": "URL already exists",
                        "schema": {
                            "$ref": "#/definitions/dto.Envelope"
                        }
                    },
                    "422": {
                        "description": "Not a URL",
                        "schema": {
                            "$ref": "#/definitions/dto.Envelope"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.Envelope"
                        }
                    }
                }
            }
        },
        "/api/shorten/batch": {
            "post": {
                "description": "If cookie with access token is not provided, creates a new token with new userID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "json"
                ],
                "summary": "Creates a batch of short URLs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cookie with access token",
                        "name": "Cookie",
                        "in": "header"
                    },
                    {
                        "description": "URLs to shorten",
                        "name": "URL",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.BatchRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Short urls",
                        "schema": {
                            "type": "body"
                        },
                        "headers": {
                            "Set-cookie": {
                                "type": "string",
                                "description": "Access token"
                            }
                        }
                    },
                    "400": {
                        "description": "Wrong URL schema",
                        "schema": {
                            "$ref": "#/definitions/dto.Envelope"
                        }
                    },
                    "409": {
                        "description": "URL already exists",
                        "schema": {
                            "$ref": "#/definitions/dto.Envelope"
                        }
                    },
                    "422": {
                        "description": "Not a URL",
                        "schema": {
                            "$ref": "#/definitions/dto.Envelope"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.Envelope"
                        }
                    }
                }
            }
        },
        "/api/user/urls": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "json"
                ],
                "summary": "Returns array of user URLs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cookie with access token",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of URLs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.URLPair"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "json"
                ],
                "summary": "Deletes user URLs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cookie with access token",
                        "name": "Cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "URLs to delete",
                        "name": "URLs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "URL doesn't belong to user",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.BatchRequest": {
            "type": "object",
            "properties": {
                "correlation_id": {
                    "type": "string"
                },
                "original_url": {
                    "type": "string"
                }
            }
        },
        "dto.Envelope": {
            "type": "object",
            "additionalProperties": true
        },
        "dto.Request": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "dto.URLPair": {
            "type": "object",
            "properties": {
                "original_url": {
                    "type": "string"
                },
                "short_url": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Access-token",
            "in": "cookie"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Shortener API",
	Description:      "This is a url shortening server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
