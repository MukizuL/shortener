// Code generated by MockGen. DO NOT EDIT.
// Source: jwt.go
//
// Generated by this command:
//
//	mockgen -source=jwt.go -destination=mocks/jwt.go -package=mockjwt
//

// Package mockjwt is a generated GoMock package.
package mockjwt

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockJWTServiceInterface is a mock of JWTServiceInterface interface.
type MockJWTServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockJWTServiceInterfaceMockRecorder
	isgomock struct{}
}

// MockJWTServiceInterfaceMockRecorder is the mock recorder for MockJWTServiceInterface.
type MockJWTServiceInterfaceMockRecorder struct {
	mock *MockJWTServiceInterface
}

// NewMockJWTServiceInterface creates a new mock instance.
func NewMockJWTServiceInterface(ctrl *gomock.Controller) *MockJWTServiceInterface {
	mock := &MockJWTServiceInterface{ctrl: ctrl}
	mock.recorder = &MockJWTServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJWTServiceInterface) EXPECT() *MockJWTServiceInterfaceMockRecorder {
	return m.recorder
}

// CreateToken mocks base method.
func (m *MockJWTServiceInterface) CreateToken() (string, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateToken")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// CreateToken indicates an expected call of CreateToken.
func (mr *MockJWTServiceInterfaceMockRecorder) CreateToken() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateToken", reflect.TypeOf((*MockJWTServiceInterface)(nil).CreateToken))
}

// RefreshToken mocks base method.
func (m *MockJWTServiceInterface) RefreshToken(userID string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RefreshToken", userID)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RefreshToken indicates an expected call of RefreshToken.
func (mr *MockJWTServiceInterfaceMockRecorder) RefreshToken(userID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RefreshToken", reflect.TypeOf((*MockJWTServiceInterface)(nil).RefreshToken), userID)
}

// ValidateToken mocks base method.
func (m *MockJWTServiceInterface) ValidateToken(token string) (string, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateToken", token)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ValidateToken indicates an expected call of ValidateToken.
func (mr *MockJWTServiceInterfaceMockRecorder) ValidateToken(token any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateToken", reflect.TypeOf((*MockJWTServiceInterface)(nil).ValidateToken), token)
}
